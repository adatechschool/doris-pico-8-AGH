pico-8 cartridge // http://www.pico-8.com
version 38
__lua__
--init
-- constantes
local largeur_case = 8
local hauteur_case = 8
local nombre_joueurs = 4
local taille_carte = 15 -- taille de la carte en nombre de cases
local first_turn =true
-- d„Çå„Åüfinition des sprites
local spritezombie = 1
local spritehumain = {2, 3, 4}

-- noms des joueurs
local nomsjoueurs = {"zombie", "rick", "nicky", "josh"}

-- variables globales
local joueurs = {}
local touractuel = 1
local scorep = 0
local parcours_humain = {}
local lancer_de_des = false
-- initialisation du jeu
function _init()
  cls()
  
  -- positionnement des joueurs
  joueurs[1] = {
    x = 0,
    y = 0,
    pv = 3,
    sprite = spritehumain[1],
    vivant = true,
    nom = "rick"
  }
  joueurs[2] = {
    x = taille_carte,
    y = 0,
    pv = 3,
    sprite = spritehumain[2],
    vivant = true,
    nom = "elise"
  }
  joueurs[3] = {
    x = 0,
    y = taille_carte,
    pv = 3,
    sprite = spritehumain[3],
    vivant = true,
    nom = "josh"
  }
  joueurs[4] = {
    x = taille_carte,
    y = taille_carte,
    pv = 3,
    sprite = spritezombie,
    vivant = true,
    nom = "zombie"
  }
  
  -- initialisation du parcours humain
  for i = 1, nombre_joueurs - 1 do
    parcours_humain[i] = {}
    for j = 0, taille_carte do
      parcours_humain[i][j] = {}
      for k = 0, taille_carte do
        parcours_humain[i][j][k] = false
      end
    end
  end
  
  timer =0
  parcours ={}
   create_de_p()
    create_de_h()
end

-- affichage
function _draw()
  cls()
  map(0,0,0,0,128,64)
  -- affichage des joueurs
  for i = 1, nombre_joueurs do
    if joueurs[i].vivant then
      spr(joueurs[i].sprite, (joueurs[i].x) * largeur_case, (joueurs[i].y) * hauteur_case)
    end
  end
   -- affichage du nom du joueur courant et des mouvements restants
  --draw_de_p()
  spr(dh.sprite,74,2)
  spr(dp.sprite,54,2)
 -- draw_de_h()
 -- print(retour, (127 - #nomjoueurcourant * 4) / 2, 1, 7)
  --print(#parcours[touractuel], (127 - #mouvementsrestantstexte * 4) / 2, 9, 7)		
end



-- gestion des tours
function prochaintour()
if first_turn 
then first_turn = false
else 
touractuel = touractuel + 1
end
printh(touractuel)
printh("ok")

  if touractuel > nombre_joueurs then
    touractuel = 1
  end
  score_de_h()
 -- mouvementsrestants = flr(rnd(6))+1
end

-- v„Çå„Åürification de fin de partie
function finpartie()
  if not joueurs[spritezombie].vivant then
    return true
  end
  for i = 1, nombre_joueurs do
    if joueurs[i].vivant then
      return false
    end
  end
  return true
end

-- gestion des mouvements
function mouvement(dx, dy)
  if dx ~= 0 or dy ~= 0 then
    local joueurcourant = joueurs[touractuel]
    local nouvellex = joueurcourant.x + dx
    local nouvelley = joueurcourant.y + dy
    -- v„Çå„Åürifier les limites de la carte
   if nouvellex >= 0 
    and nouvellex <= taille_carte 
    and nouvelley >= 0
    and nouvelley <= taille_carte
    and not verif_flag(0,nouvellex, nouvelley) then
      joueurcourant.x = nouvellex
      joueurcourant.y = nouvelley
      scorep = scorep - 1
      if (scorep == 0) lancer_de_des = false
    end
  end
end

-- gestion des „Çå„Åüv„Çå„Åünements
function _update()
timer= timer +1
  if finpartie() then
    print("fin de la partie")
    return
  end
  local joueurcourant = joueurs[touractuel]
  if joueurcourant.vivant then
 if joueurcourant.nom == "zombie" 
 then score_de_p()
    local dx, dy = 0, 0
   printh(lancer_de_des)
   if lancer_de_des == true then
    if btnp(‚¨ÖÔ∏è) then -- fl„Çå„Åùche gauche
      dx = -1
    elseif btnp(‚û°Ô∏è) then -- fl„Çå„Åùche droite
      dx = 1
    elseif btnp(‚¨ÜÔ∏è) then -- fl„Çå„Åùche haut
      dy = -1
    elseif btnp(‚¨áÔ∏è) then -- fl„Çå„Åùche bas
      dy = 1
    end  
    mouvement(dx, dy)
    timer= 0
    end
 else
 				if timer == 20 
 				then mouvement_humain(joueurcourant.x, joueurcourant.y)
	    timer = 0
	    end
 end   
    if scorep <= 0
     then 
     prochaintour() 
     printh("reset")
    end     
  else
    prochaintour()
  end
end
-->8
--deplacement humains

function remove(tab)
	local index = #tab
	local last_element = tab[index]
	tab[#tab] = nil
	return last_element
end

function append_element(tbl, element)

  
  if #tbl < 1 then
  tbl = {element}
  else
    tbl[#tbl + 1] = element
  end
end


function includes(tab, value)
  
  for i = 1, #tab do
    if tab[i][1] == value[1] and tab[i][2] == value[2] then
      return true
    end
  end
  return false
end



function verif_flag(flag,x,y)
local sprite=mget(x,y)
return fget(sprite,flag)
end

function mouvement_humain(x, y)
	local possibilites = {}
	local case_haut_y = y - 1
	local case_bas_y = y + 1
	local case_gauche_x = x - 1
	local case_droite_x = x + 1
	 -- initialisation du parcours humain
  for i = 1, nombre_joueurs - 1 do
    parcours[i] = {}
    end
	
	if not verif_flag(0,x,case_haut_y) 
		then if case_haut_y < 16 and case_haut_y > -1
		then if parcours_humain[touractuel][x][case_haut_y]  == false
								then possibilites[#possibilites+1]= {x,case_haut_y}
							end
							end
	end
	
	if not verif_flag(0,x,case_bas_y) 
		then if case_bas_y < 16 and case_bas_y > -1 
		then if parcours_humain[touractuel][x][case_bas_y] == false
								then possibilites[#possibilites+1]={x,case_bas_y}
							end
							end
	end
	
	if not verif_flag(0,case_gauche_x,y)
	 then if case_gauche_x < 16 and case_gauche_x > -1 
	      	then if parcours_humain[touractuel][case_gauche_x][y] == false 
	      	then possibilites[#possibilites+1]={case_gauche_x,y}
	      end
	      end
	end
	
	if not verif_flag(0,case_droite_x,y)
		then if case_droite_x < 16 and case_droite_x > -1 
		then if parcours_humain[touractuel][case_droite_x][y] == false
								then possibilites[#possibilites+1]={case_droite_x,y}
							end
							end
	end
	
	if #possibilites > 0  
	then local choix = flr(rnd(#possibilites)) + 1
		parcours_humain[touractuel][joueurs[touractuel].x][joueurs[touractuel].y]= true

		append_element(parcours, { joueurs[touractuel].x, joueurs[touractuel].y })
	 if #possibilites == 1 
	 then joueurs[touractuel].x=possibilites[1][1]
		joueurs[touractuel].y=possibilites[1][2]
		else
		joueurs[touractuel].x=possibilites[choix][1]
		joueurs[touractuel].y=possibilites[choix][2]
		end
	else 
  retour = remove(parcours)
  if retour ~= nil then
	  joueurs[touractuel].x = retour[1]	
	  joueurs[touractuel].y = retour[2]
	end
	end
	scorep = scorep - 1
end

-->8
--lance de de
function create_de_p()
    dp={
    x=74,
    y=2,
    sprite=112,
    }
end
function create_de_h()
    dh={
    x=54,
    y=2,
    sprite=112,
    }
end
function draw_de_p()
    if (scorep!=nil) then
    palt(0,false)
    palt(12,true)
    spr(dp.sprite,dp.x,dp.y)
end
end
function draw_de_h()
    if (scoreh!=nil) then
    palt(0,false)
    palt(12,true)
    spr(dh.sprite,dh.x,dh.y)
end
end
function score_de_p()
    palt(0,false)
    palt(12,true)
    if btnp(üÖæÔ∏è) then scorep=flr(rnd(6))+1
 if (scorep==1) dp.sprite=122
 if (scorep==2) dp.sprite=123
 if (scorep==3) dp.sprite=124 
 if (scorep==4) dp.sprite=125
 if (scorep==5) dp.sprite=126
 if (scorep==6) dp.sprite=127
 lancer_de_des = true
 printh(lancer_de_des)
end
end
function score_de_h()
    palt(0,false)
    palt(12,true)
   scorep=flr(rnd(6))+1
 if (scorep==1) dh.sprite=106
 if (scorep==2) dh.sprite=107
 if (scorep==3) dh.sprite=108 
 if (scorep==4) dh.sprite=109
 if (scorep==5) dh.sprite=110
 if (scorep==6) dh.sprite=111
end
__gfx__
000000000000000000000000000a0000000770006666666688888888445544444455444466666666666666666666666600000000000000000000000000000000
00000000003333000444400000aaaa00077777006666666688888888554455445544884466666668688666666666688600000000000000000000000000000000
007007000038833004ff44000affffa007ffff706666666688888888445544554455448866666686688868866888888600000000000000000000000000000000
000770000033330000fff0000a1ff1a0074ff4706666666688888888554455445544554466668886668686666888886600000000000000000000000000000000
00077000000bb000003330000affffa0006f66006666666688888888445544444455444466686666666886666688888600000000000000000000000000000000
00700700000bb000004a40000eeeeee0055555506666666688888888554455445544554466868866666668666888888600000000000000000000000000000000
00000000000bb0000011100000cccc00004444006666666688888888445544554455445568866686666666866886888600000000000000000000000000000000
00000000000000000060600000500500001001006666666688888888554455445544554466666666666666666666666600000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
fffffff0000000000000000000000000000000000000000000000000000000000000000000000000fffffff0fffffff0fffffff0fffffff0fffffff0fffffff0
fffffff0000000000000000000000000000000000000000000000000000000000000000000000000fffffff0fffff0f0fffff0f0f0fff0f0f0fff0f0f0fff0f0
fffffff0000000000000000000000000000000000000000000000000000000000000000000000000fffffff0fffffff0fffffff0fffffff0fffffff0fffffff0
fffffff0000000000000000000000000000000000000000000000000000000000000000000000000fff0fff0fffffff0fff0fff0fffffff0fff0fff0f0fff0f0
fffffff0000000000000000000000000000000000000000000000000000000000000000000000000fffffff0fffffff0fffffff0fffffff0fffffff0fffffff0
fffffff0000000000000000000000000000000000000000000000000000000000000000000000000fffffff0f0fffff0f0fffff0f0fff0f0f0fff0f0f0fff0f0
fffffff0000000000000000000000000000000000000000000000000000000000000000000000000fffffff0fffffff0fffffff0fffffff0fffffff0fffffff0
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
77777770000000000000000000000000000000000000000000000000000000000000000000000000777777707777777077777770777777707777777077777770
77777770000000000000000000000000000000000000000000000000000000000000000000000000777777707777707077777070707770707077707070777070
77777770000000000000000000000000000000000000000000000000000000000000000000000000777777707777777077777770777777707777777077777770
77777770000000000000000000000000000000000000000000000000000000000000000000000000777077707777777077707770777777707770777070777070
77777770000000000000000000000000000000000000000000000000000000000000000000000000777777707777777077777770777777707777777077777770
77777770000000000000000000000000000000000000000000000000000000000000000000000000777777707077777070777770707770707077707070777070
77777770000000000000000000000000000000000000000000000000000000000000000000000000777777707777777077777770777777707777777077777770
__gff__
0000000000000001011020400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__map__
0905070505050705050505070507070a00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0507070707050505070507050505070500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0507050507050707050505050707070500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0505050507050707050707050505050500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0507070505050505050507070705070700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0505070507070507070705050505050500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0707070507050705050507050707070700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0505050507050505070707050505050500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0705070707070705070505050707050700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0705050505050505050507070707050700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0507070705070707070505050505050500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0505070505070705050707050707070500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0705070507050505070505050505050700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0505050505050705070507070507070700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0705070507050707070507070505050500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0b05070507050505050507050507070500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
